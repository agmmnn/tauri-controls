// vite.config.ts
import { resolve } from "node:path";
import terser from "file:///Users/annieehler/Nextcloud2/Projects/OpenSource/tauri-controls/node_modules/.pnpm/@rollup+plugin-terser@0.4.3_rollup@3.29.1/node_modules/@rollup/plugin-terser/dist/es/index.js";
import react from "file:///Users/annieehler/Nextcloud2/Projects/OpenSource/tauri-controls/node_modules/.pnpm/@vitejs+plugin-react-swc@3.3.2_vite@4.4.9/node_modules/@vitejs/plugin-react-swc/index.mjs";
import { defineConfig } from "file:///Users/annieehler/Nextcloud2/Projects/OpenSource/tauri-controls/node_modules/.pnpm/vite@4.4.9_@types+node@20.6.0/node_modules/vite/dist/node/index.js";
import dts from "file:///Users/annieehler/Nextcloud2/Projects/OpenSource/tauri-controls/node_modules/.pnpm/vite-plugin-dts@3.5.3_@types+node@20.6.0_rollup@3.29.1_typescript@5.2.2_vite@4.4.9/node_modules/vite-plugin-dts/dist/index.mjs";
import EsLint from "file:///Users/annieehler/Nextcloud2/Projects/OpenSource/tauri-controls/node_modules/.pnpm/vite-plugin-linter@2.0.5_rollup@3.29.1/node_modules/vite-plugin-linter/dist/index.js";
import tsConfigPaths from "file:///Users/annieehler/Nextcloud2/Projects/OpenSource/tauri-controls/node_modules/.pnpm/vite-tsconfig-paths@4.2.1_typescript@5.2.2_vite@4.4.9/node_modules/vite-tsconfig-paths/dist/index.mjs";

// package.json
var peerDependencies = {
  "@tauri-apps/plugin-os": "https://github.com/tauri-apps/tauri-plugin-os#v2",
  clsx: "^2.0.0",
  react: "^18.2.0",
  "react-dom": "^18.2.0",
  "tailwind-merge": "^1.14.0"
};

// vite.config.ts
var { EsLinter, linterPlugin } = EsLint;
var vite_config_default = defineConfig((configEnv) => ({
  plugins: [
    dts({
      include: ["./src/tauri-controls"],
      rollupTypes: true
    }),
    react(),
    tsConfigPaths()
    // linterPlugin({
    //   include: ["./src/tauri-controls/**/*.{ts,tsx}"],
    //   linters: [new EsLinter({ configEnv })],
    // }),
  ],
  build: {
    lib: {
      entry: resolve("src", "tauri-controls/index.ts"),
      name: "TauriControls",
      formats: ["es"],
      //"umd"
      fileName: () => `tauri-controls.js`
    },
    rollupOptions: {
      external: [...Object.keys(peerDependencies)],
      plugins: [terser()],
      output: {
        globals: {
          react: "React",
          "react-dom": "ReactDOM",
          "@tauri-apps/plugin-os": "pluginOs",
          clsx: "clsx",
          "tailwind-merge": "tailwindMerge",
          "@tauri-apps/plugin-window": "pluginWindow"
        },
        intro: 'import "./style.css";',
        plugins: [terser()]
      }
    }
  },
  clearScreen: false,
  server: {
    port: 1421,
    strictPort: true
  },
  envPrefix: ["VITE_", "TAURI_"]
}));
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiLCAicGFja2FnZS5qc29uIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiL1VzZXJzL2FubmllZWhsZXIvTmV4dGNsb3VkMi9Qcm9qZWN0cy9PcGVuU291cmNlL3RhdXJpLWNvbnRyb2xzL2FwcHMvdGF1cmktY29udHJvbHNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIi9Vc2Vycy9hbm5pZWVobGVyL05leHRjbG91ZDIvUHJvamVjdHMvT3BlblNvdXJjZS90YXVyaS1jb250cm9scy9hcHBzL3RhdXJpLWNvbnRyb2xzL3ZpdGUuY29uZmlnLnRzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9Vc2Vycy9hbm5pZWVobGVyL05leHRjbG91ZDIvUHJvamVjdHMvT3BlblNvdXJjZS90YXVyaS1jb250cm9scy9hcHBzL3RhdXJpLWNvbnRyb2xzL3ZpdGUuY29uZmlnLnRzXCI7aW1wb3J0IHsgcmVzb2x2ZSB9IGZyb20gXCJub2RlOnBhdGhcIlxuaW1wb3J0IHRlcnNlciBmcm9tIFwiQHJvbGx1cC9wbHVnaW4tdGVyc2VyXCJcbmltcG9ydCByZWFjdCBmcm9tIFwiQHZpdGVqcy9wbHVnaW4tcmVhY3Qtc3djXCJcbmltcG9ydCB7IGRlZmluZUNvbmZpZyB9IGZyb20gXCJ2aXRlXCJcbmltcG9ydCBkdHMgZnJvbSBcInZpdGUtcGx1Z2luLWR0c1wiXG5pbXBvcnQgRXNMaW50IGZyb20gXCJ2aXRlLXBsdWdpbi1saW50ZXJcIlxuaW1wb3J0IHRzQ29uZmlnUGF0aHMgZnJvbSBcInZpdGUtdHNjb25maWctcGF0aHNcIlxuaW1wb3J0ICogYXMgcGFja2FnZUpzb24gZnJvbSBcIi4vcGFja2FnZS5qc29uXCJcblxuY29uc3QgeyBFc0xpbnRlciwgbGludGVyUGx1Z2luIH0gPSBFc0xpbnRcblxuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKChjb25maWdFbnYpID0+ICh7XG4gIHBsdWdpbnM6IFtcbiAgICBkdHMoe1xuICAgICAgaW5jbHVkZTogW1wiLi9zcmMvdGF1cmktY29udHJvbHNcIl0sXG4gICAgICByb2xsdXBUeXBlczogdHJ1ZSxcbiAgICB9KSxcbiAgICByZWFjdCgpLFxuICAgIHRzQ29uZmlnUGF0aHMoKSxcbiAgICAvLyBsaW50ZXJQbHVnaW4oe1xuICAgIC8vICAgaW5jbHVkZTogW1wiLi9zcmMvdGF1cmktY29udHJvbHMvKiovKi57dHMsdHN4fVwiXSxcbiAgICAvLyAgIGxpbnRlcnM6IFtuZXcgRXNMaW50ZXIoeyBjb25maWdFbnYgfSldLFxuICAgIC8vIH0pLFxuICBdLFxuICBidWlsZDoge1xuICAgIGxpYjoge1xuICAgICAgZW50cnk6IHJlc29sdmUoXCJzcmNcIiwgXCJ0YXVyaS1jb250cm9scy9pbmRleC50c1wiKSxcbiAgICAgIG5hbWU6IFwiVGF1cmlDb250cm9sc1wiLFxuICAgICAgZm9ybWF0czogW1wiZXNcIl0sIC8vXCJ1bWRcIlxuICAgICAgZmlsZU5hbWU6ICgpID0+IGB0YXVyaS1jb250cm9scy5qc2AsXG4gICAgfSxcbiAgICByb2xsdXBPcHRpb25zOiB7XG4gICAgICBleHRlcm5hbDogWy4uLk9iamVjdC5rZXlzKHBhY2thZ2VKc29uLnBlZXJEZXBlbmRlbmNpZXMpXSxcbiAgICAgIHBsdWdpbnM6IFt0ZXJzZXIoKV0sXG4gICAgICBvdXRwdXQ6IHtcbiAgICAgICAgZ2xvYmFsczoge1xuICAgICAgICAgIHJlYWN0OiBcIlJlYWN0XCIsXG4gICAgICAgICAgXCJyZWFjdC1kb21cIjogXCJSZWFjdERPTVwiLFxuICAgICAgICAgIFwiQHRhdXJpLWFwcHMvcGx1Z2luLW9zXCI6IFwicGx1Z2luT3NcIixcbiAgICAgICAgICBjbHN4OiBcImNsc3hcIixcbiAgICAgICAgICBcInRhaWx3aW5kLW1lcmdlXCI6IFwidGFpbHdpbmRNZXJnZVwiLFxuICAgICAgICAgIFwiQHRhdXJpLWFwcHMvcGx1Z2luLXdpbmRvd1wiOiBcInBsdWdpbldpbmRvd1wiLFxuICAgICAgICB9LFxuICAgICAgICBpbnRybzogJ2ltcG9ydCBcIi4vc3R5bGUuY3NzXCI7JyxcbiAgICAgICAgcGx1Z2luczogW3RlcnNlcigpXSxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcblxuICBjbGVhclNjcmVlbjogZmFsc2UsXG4gIHNlcnZlcjoge1xuICAgIHBvcnQ6IDE0MjEsXG4gICAgc3RyaWN0UG9ydDogdHJ1ZSxcbiAgfSxcbiAgZW52UHJlZml4OiBbXCJWSVRFX1wiLCBcIlRBVVJJX1wiXSxcbn0pKVxuIiwgIntcbiAgXCJuYW1lXCI6IFwidGF1cmktY29udHJvbHNcIixcbiAgXCJkZXNjcmlwdGlvblwiOiBcIlx1RDgzRFx1REVBNSBOYXRpdmUtbG9va2luZyB3aW5kb3cgY29udHJvbHMgZm9yIFRhdXJpIDIuXCIsXG4gIFwicHJpdmF0ZVwiOiBmYWxzZSxcbiAgXCJ2ZXJzaW9uXCI6IFwiMC4yLjBcIixcbiAgXCJ0eXBlXCI6IFwibW9kdWxlXCIsXG4gIFwibGljZW5zZVwiOiBcIk1JVFwiLFxuICBcInNjcmlwdHNcIjoge1xuICAgIFwiZGV2XCI6IFwidml0ZVwiLFxuICAgIFwiYnVpbGRcIjogXCJ0c2MgJiYgdml0ZSBidWlsZFwiLFxuICAgIFwiYnVpbGQ6d2F0Y2hcIjogXCJ2aXRlIGJ1aWxkIC0td2F0Y2hcIixcbiAgICBcInByZXZpZXdcIjogXCJ2aXRlIHByZXZpZXdcIixcbiAgICBcImxpbnRcIjogXCJlc2xpbnQgc3JjIC0tZXh0IC5qcywuanN4LC50cywudHN4XCIsXG4gICAgXCJmb3JtYXRcIjogXCJwcmV0dGllciAtLXdyaXRlIC4gLS1jb25maWcgLi9wcmV0dGllci5jb25maWcuY2pzXCIsXG4gICAgXCJ0YXVyaVwiOiBcInRhdXJpXCIsXG4gICAgXCJ0YXVyaTpkZXZcIjogXCJ0YXVyaSBkZXZcIlxuICB9LFxuICBcInB1Ymxpc2hDb25maWdcIjoge1xuICAgIFwiYWNjZXNzXCI6IFwicHVibGljXCJcbiAgfSxcbiAgXCJyZXBvc2l0b3J5XCI6IHtcbiAgICBcInR5cGVcIjogXCJnaXRcIixcbiAgICBcInVybFwiOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9hZ21tbm4vdGF1cmktY29udHJvbHNcIlxuICB9LFxuICBcImF1dGhvclwiOiBcImFnbW1ublwiLFxuICBcImJ1Z3NcIjoge1xuICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL2FnbW1ubi90YXVyaS1jb250cm9scy9pc3N1ZXNcIlxuICB9LFxuICBcImhvbWVwYWdlXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL2FnbW1ubi90YXVyaS1jb250cm9scyNyZWFkbWVcIixcbiAgXCJmaWxlc1wiOiBbXG4gICAgXCJkaXN0XCJcbiAgXSxcbiAgXCJleHBvcnRzXCI6IHtcbiAgICBcIi5cIjoge1xuICAgICAgXCJpbXBvcnRcIjogXCIuL2Rpc3QvdGF1cmktY29udHJvbHMuanNcIixcbiAgICAgIFwidHlwZXNcIjogXCIuL2Rpc3QvaW5kZXguZC50c1wiXG4gICAgfVxuICB9LFxuICBcIm1vZHVsZVwiOiBcIi4vZGlzdC90YXVyaS1jb250cm9scy5qc1wiLFxuICBcInR5cGVzXCI6IFwiLi9kaXN0L2luZGV4LmQudHNcIixcbiAgXCJkZXBlbmRlbmNpZXNcIjoge1xuICAgIFwiQHRhdXJpLWFwcHMvYXBpXCI6IFwibmV4dFwiXG4gIH0sXG4gIFwiZGV2RGVwZW5kZW5jaWVzXCI6IHtcbiAgICBcIkBpYW52cy9wcmV0dGllci1wbHVnaW4tc29ydC1pbXBvcnRzXCI6IFwiXjQuMS4wXCIsXG4gICAgXCJAcm9sbHVwL3BsdWdpbi10ZXJzZXJcIjogXCJeMC40LjNcIixcbiAgICBcIkB0YXVyaS1hcHBzL2NsaVwiOiBcIm5leHRcIixcbiAgICBcIkB0eXBlcy9ub2RlXCI6IFwiXjIwLjYuMFwiLFxuICAgIFwiQHR5cGVzL3JlYWN0XCI6IFwiXjE4LjIuMjFcIixcbiAgICBcIkB0eXBlcy9yZWFjdC1kb21cIjogXCJeMTguMi43XCIsXG4gICAgXCJAdHlwZXNjcmlwdC1lc2xpbnQvZXNsaW50LXBsdWdpblwiOiBcIl42LjcuMFwiLFxuICAgIFwiQHR5cGVzY3JpcHQtZXNsaW50L3BhcnNlclwiOiBcIl42LjcuMFwiLFxuICAgIFwiQHZpdGVqcy9wbHVnaW4tcmVhY3Qtc3djXCI6IFwiXjMuMy4yXCIsXG4gICAgXCJhdXRvcHJlZml4ZXJcIjogXCJeMTAuNC4xNVwiLFxuICAgIFwiZXNsaW50XCI6IFwiXjguNDkuMFwiLFxuICAgIFwiZXNsaW50LWNvbmZpZy1wcmV0dGllclwiOiBcIl45LjAuMFwiLFxuICAgIFwiZXNsaW50LXBsdWdpbi1pbXBvcnRcIjogXCJeMi4yOC4xXCIsXG4gICAgXCJlc2xpbnQtcGx1Z2luLXJlYWN0XCI6IFwiXjcuMzMuMlwiLFxuICAgIFwiZXNsaW50LXBsdWdpbi1yZWFjdC1ob29rc1wiOiBcIl40LjYuMFwiLFxuICAgIFwicG9zdGNzc1wiOiBcIl44LjQuMjlcIixcbiAgICBcInByZXR0aWVyXCI6IFwiXjMuMC4zXCIsXG4gICAgXCJwcmV0dGllci1wbHVnaW4tdGFpbHdpbmRjc3NcIjogXCJeMC41LjRcIixcbiAgICBcInJvbGx1cFwiOiBcIl4zLjI5LjFcIixcbiAgICBcInJvbGx1cC1wbHVnaW4tcG9zdGNzc1wiOiBcIl40LjAuMlwiLFxuICAgIFwidGFpbHdpbmRjc3NcIjogXCJeMy4zLjNcIixcbiAgICBcInR5cGVzY3JpcHRcIjogXCJeNS4yLjJcIixcbiAgICBcInZpdGVcIjogXCJeNC40LjlcIixcbiAgICBcInZpdGUtcGx1Z2luLWR0c1wiOiBcIl4zLjUuM1wiLFxuICAgIFwidml0ZS1wbHVnaW4tbGludGVyXCI6IFwiXjIuMC41XCIsXG4gICAgXCJ2aXRlLXRzY29uZmlnLXBhdGhzXCI6IFwiXjQuMi4xXCJcbiAgfSxcbiAgXCJwZWVyRGVwZW5kZW5jaWVzXCI6IHtcbiAgICBcIkB0YXVyaS1hcHBzL3BsdWdpbi1vc1wiOiBcImh0dHBzOi8vZ2l0aHViLmNvbS90YXVyaS1hcHBzL3RhdXJpLXBsdWdpbi1vcyN2MlwiLFxuICAgIFwiY2xzeFwiOiBcIl4yLjAuMFwiLFxuICAgIFwicmVhY3RcIjogXCJeMTguMi4wXCIsXG4gICAgXCJyZWFjdC1kb21cIjogXCJeMTguMi4wXCIsXG4gICAgXCJ0YWlsd2luZC1tZXJnZVwiOiBcIl4xLjE0LjBcIlxuICB9XG59XG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQTJhLFNBQVMsZUFBZTtBQUNuYyxPQUFPLFlBQVk7QUFDbkIsT0FBTyxXQUFXO0FBQ2xCLFNBQVMsb0JBQW9CO0FBQzdCLE9BQU8sU0FBUztBQUNoQixPQUFPLFlBQVk7QUFDbkIsT0FBTyxtQkFBbUI7OztBQ2lFeEIsdUJBQW9CO0FBQUEsRUFDbEIseUJBQXlCO0FBQUEsRUFDekIsTUFBUTtBQUFBLEVBQ1IsT0FBUztBQUFBLEVBQ1QsYUFBYTtBQUFBLEVBQ2Isa0JBQWtCO0FBQ3BCOzs7QURwRUYsSUFBTSxFQUFFLFVBQVUsYUFBYSxJQUFJO0FBRW5DLElBQU8sc0JBQVEsYUFBYSxDQUFDLGVBQWU7QUFBQSxFQUMxQyxTQUFTO0FBQUEsSUFDUCxJQUFJO0FBQUEsTUFDRixTQUFTLENBQUMsc0JBQXNCO0FBQUEsTUFDaEMsYUFBYTtBQUFBLElBQ2YsQ0FBQztBQUFBLElBQ0QsTUFBTTtBQUFBLElBQ04sY0FBYztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFLaEI7QUFBQSxFQUNBLE9BQU87QUFBQSxJQUNMLEtBQUs7QUFBQSxNQUNILE9BQU8sUUFBUSxPQUFPLHlCQUF5QjtBQUFBLE1BQy9DLE1BQU07QUFBQSxNQUNOLFNBQVMsQ0FBQyxJQUFJO0FBQUE7QUFBQSxNQUNkLFVBQVUsTUFBTTtBQUFBLElBQ2xCO0FBQUEsSUFDQSxlQUFlO0FBQUEsTUFDYixVQUFVLENBQUMsR0FBRyxPQUFPLEtBQWlCLGdCQUFnQixDQUFDO0FBQUEsTUFDdkQsU0FBUyxDQUFDLE9BQU8sQ0FBQztBQUFBLE1BQ2xCLFFBQVE7QUFBQSxRQUNOLFNBQVM7QUFBQSxVQUNQLE9BQU87QUFBQSxVQUNQLGFBQWE7QUFBQSxVQUNiLHlCQUF5QjtBQUFBLFVBQ3pCLE1BQU07QUFBQSxVQUNOLGtCQUFrQjtBQUFBLFVBQ2xCLDZCQUE2QjtBQUFBLFFBQy9CO0FBQUEsUUFDQSxPQUFPO0FBQUEsUUFDUCxTQUFTLENBQUMsT0FBTyxDQUFDO0FBQUEsTUFDcEI7QUFBQSxJQUNGO0FBQUEsRUFDRjtBQUFBLEVBRUEsYUFBYTtBQUFBLEVBQ2IsUUFBUTtBQUFBLElBQ04sTUFBTTtBQUFBLElBQ04sWUFBWTtBQUFBLEVBQ2Q7QUFBQSxFQUNBLFdBQVcsQ0FBQyxTQUFTLFFBQVE7QUFDL0IsRUFBRTsiLAogICJuYW1lcyI6IFtdCn0K
