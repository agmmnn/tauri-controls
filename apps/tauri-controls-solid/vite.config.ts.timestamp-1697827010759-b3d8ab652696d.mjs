// vite.config.ts
import { resolve } from "node:path";
import terser from "file:///Users/annieehler/Nextcloud2/Projects/OpenSource/tauri-controls/node_modules/.pnpm/@rollup+plugin-terser@0.4.3_rollup@3.29.1/node_modules/@rollup/plugin-terser/dist/es/index.js";
import { defineConfig } from "file:///Users/annieehler/Nextcloud2/Projects/OpenSource/tauri-controls/node_modules/.pnpm/vite@4.4.9_@types+node@20.8.7/node_modules/vite/dist/node/index.js";
import dts from "file:///Users/annieehler/Nextcloud2/Projects/OpenSource/tauri-controls/node_modules/.pnpm/vite-plugin-dts@3.5.3_@types+node@20.8.7_rollup@3.29.1_typescript@5.2.2_vite@4.4.9/node_modules/vite-plugin-dts/dist/index.mjs";
import solidPlugin from "file:///Users/annieehler/Nextcloud2/Projects/OpenSource/tauri-controls/node_modules/.pnpm/vite-plugin-solid@2.7.0_solid-js@1.7.8_vite@4.4.9/node_modules/vite-plugin-solid/dist/esm/index.mjs";

// package.json
var peerDependencies = {
  "@tauri-apps/plugin-os": "2.0.0-alpha.2",
  "solid-js": "^1.7.8",
  "tailwind-merge": "^1.14.0"
};

// vite.config.ts
var vite_config_default = defineConfig((_) => ({
  plugins: [
    dts({
      include: ["./src/tauri-controls"],
      rollupTypes: true
    }),
    solidPlugin()
  ],
  build: {
    lib: {
      entry: resolve("src", "tauri-controls/index.ts"),
      name: "TauriControls",
      formats: ["es"],
      //"umd"
      fileName: () => `tauri-controls.js`
    },
    rollupOptions: {
      external: [...Object.keys(peerDependencies)],
      plugins: [terser()],
      output: {
        globals: {
          react: "React",
          "react-dom": "ReactDOM",
          "@tauri-apps/plugin-os": "pluginOs",
          clsx: "clsx",
          "tailwind-merge": "tailwindMerge",
          "@tauri-apps/plugin-window": "pluginWindow"
        },
        intro: 'import "./style.css";',
        plugins: [terser()]
      }
    }
  },
  // Vite options tailored for Tauri development and only applied in `tauri dev` or `tauri build`
  //
  // 1. prevent vite from obscuring rust errors
  clearScreen: false,
  // 2. tauri expects a fixed port, fail if that port is not available
  server: {
    port: 1423,
    strictPort: true
  },
  // 3. to make use of `TAURI_DEBUG` and other env variables
  // https://tauri.studio/v1/api/config#buildconfig.beforedevcommand
  envPrefix: ["VITE_", "TAURI_"]
}));
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiLCAicGFja2FnZS5qc29uIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiL1VzZXJzL2FubmllZWhsZXIvTmV4dGNsb3VkMi9Qcm9qZWN0cy9PcGVuU291cmNlL3RhdXJpLWNvbnRyb2xzL2FwcHMvdGF1cmktY29udHJvbHMtc29saWRcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIi9Vc2Vycy9hbm5pZWVobGVyL05leHRjbG91ZDIvUHJvamVjdHMvT3BlblNvdXJjZS90YXVyaS1jb250cm9scy9hcHBzL3RhdXJpLWNvbnRyb2xzLXNvbGlkL3ZpdGUuY29uZmlnLnRzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9Vc2Vycy9hbm5pZWVobGVyL05leHRjbG91ZDIvUHJvamVjdHMvT3BlblNvdXJjZS90YXVyaS1jb250cm9scy9hcHBzL3RhdXJpLWNvbnRyb2xzLXNvbGlkL3ZpdGUuY29uZmlnLnRzXCI7aW1wb3J0IHsgcmVzb2x2ZSB9IGZyb20gXCJub2RlOnBhdGhcIlxuaW1wb3J0IHRlcnNlciBmcm9tIFwiQHJvbGx1cC9wbHVnaW4tdGVyc2VyXCJcbmltcG9ydCB7IGRlZmluZUNvbmZpZyB9IGZyb20gXCJ2aXRlXCJcbmltcG9ydCBkdHMgZnJvbSBcInZpdGUtcGx1Z2luLWR0c1wiXG5pbXBvcnQgc29saWRQbHVnaW4gZnJvbSBcInZpdGUtcGx1Z2luLXNvbGlkXCJcbmltcG9ydCAqIGFzIHBhY2thZ2VKc29uIGZyb20gXCIuL3BhY2thZ2UuanNvblwiXG5cbi8vIGh0dHBzOi8vdml0ZWpzLmRldi9jb25maWcvXG5leHBvcnQgZGVmYXVsdCBkZWZpbmVDb25maWcoKF8pID0+ICh7XG4gIHBsdWdpbnM6IFtcbiAgICBkdHMoe1xuICAgICAgaW5jbHVkZTogW1wiLi9zcmMvdGF1cmktY29udHJvbHNcIl0sXG4gICAgICByb2xsdXBUeXBlczogdHJ1ZSxcbiAgICB9KSxcbiAgICBzb2xpZFBsdWdpbigpLFxuICBdLFxuXG4gIGJ1aWxkOiB7XG4gICAgbGliOiB7XG4gICAgICBlbnRyeTogcmVzb2x2ZShcInNyY1wiLCBcInRhdXJpLWNvbnRyb2xzL2luZGV4LnRzXCIpLFxuICAgICAgbmFtZTogXCJUYXVyaUNvbnRyb2xzXCIsXG4gICAgICBmb3JtYXRzOiBbXCJlc1wiXSwgLy9cInVtZFwiXG4gICAgICBmaWxlTmFtZTogKCkgPT4gYHRhdXJpLWNvbnRyb2xzLmpzYCxcbiAgICB9LFxuICAgIHJvbGx1cE9wdGlvbnM6IHtcbiAgICAgIGV4dGVybmFsOiBbLi4uT2JqZWN0LmtleXMocGFja2FnZUpzb24ucGVlckRlcGVuZGVuY2llcyldLFxuICAgICAgcGx1Z2luczogW3RlcnNlcigpXSxcbiAgICAgIG91dHB1dDoge1xuICAgICAgICBnbG9iYWxzOiB7XG4gICAgICAgICAgcmVhY3Q6IFwiUmVhY3RcIixcbiAgICAgICAgICBcInJlYWN0LWRvbVwiOiBcIlJlYWN0RE9NXCIsXG4gICAgICAgICAgXCJAdGF1cmktYXBwcy9wbHVnaW4tb3NcIjogXCJwbHVnaW5Pc1wiLFxuICAgICAgICAgIGNsc3g6IFwiY2xzeFwiLFxuICAgICAgICAgIFwidGFpbHdpbmQtbWVyZ2VcIjogXCJ0YWlsd2luZE1lcmdlXCIsXG4gICAgICAgICAgXCJAdGF1cmktYXBwcy9wbHVnaW4td2luZG93XCI6IFwicGx1Z2luV2luZG93XCIsXG4gICAgICAgIH0sXG4gICAgICAgIGludHJvOiAnaW1wb3J0IFwiLi9zdHlsZS5jc3NcIjsnLFxuICAgICAgICBwbHVnaW5zOiBbdGVyc2VyKCldLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxuXG4gIC8vIFZpdGUgb3B0aW9ucyB0YWlsb3JlZCBmb3IgVGF1cmkgZGV2ZWxvcG1lbnQgYW5kIG9ubHkgYXBwbGllZCBpbiBgdGF1cmkgZGV2YCBvciBgdGF1cmkgYnVpbGRgXG4gIC8vXG4gIC8vIDEuIHByZXZlbnQgdml0ZSBmcm9tIG9ic2N1cmluZyBydXN0IGVycm9yc1xuICBjbGVhclNjcmVlbjogZmFsc2UsXG4gIC8vIDIuIHRhdXJpIGV4cGVjdHMgYSBmaXhlZCBwb3J0LCBmYWlsIGlmIHRoYXQgcG9ydCBpcyBub3QgYXZhaWxhYmxlXG4gIHNlcnZlcjoge1xuICAgIHBvcnQ6IDE0MjMsXG4gICAgc3RyaWN0UG9ydDogdHJ1ZSxcbiAgfSxcbiAgLy8gMy4gdG8gbWFrZSB1c2Ugb2YgYFRBVVJJX0RFQlVHYCBhbmQgb3RoZXIgZW52IHZhcmlhYmxlc1xuICAvLyBodHRwczovL3RhdXJpLnN0dWRpby92MS9hcGkvY29uZmlnI2J1aWxkY29uZmlnLmJlZm9yZWRldmNvbW1hbmRcbiAgZW52UHJlZml4OiBbXCJWSVRFX1wiLCBcIlRBVVJJX1wiXSxcbn0pKVxuIiwgIntcbiAgXCJuYW1lXCI6IFwiQHRhdXJpLWNvbnRyb2xzL3NvbGlkXCIsXG4gIFwiZGVzY3JpcHRpb25cIjogXCJcdUQ4M0RcdURFQTUgTmF0aXZlLWxvb2tpbmcgd2luZG93IGNvbnRyb2xzIGZvciBUYXVyaSAyLlwiLFxuICBcInByaXZhdGVcIjogZmFsc2UsXG4gIFwidmVyc2lvblwiOiBcIjAuMi4wXCIsXG4gIFwidHlwZVwiOiBcIm1vZHVsZVwiLFxuICBcImxpY2Vuc2VcIjogXCJNSVRcIixcbiAgXCJzY3JpcHRzXCI6IHtcbiAgICBcInN0YXJ0XCI6IFwidml0ZVwiLFxuICAgIFwiZGV2XCI6IFwidml0ZVwiLFxuICAgIFwiYnVpbGRcIjogXCJ0c2MgJiYgdml0ZSBidWlsZFwiLFxuICAgIFwic2VydmVcIjogXCJ2aXRlIHByZXZpZXdcIixcbiAgICBcInRhdXJpXCI6IFwidGF1cmlcIixcbiAgICBcInRhdXJpOmRldlwiOiBcInRhdXJpIGRldlwiLFxuICAgIFwiZm9ybWF0XCI6IFwicHJldHRpZXIgLS13cml0ZSAuIC0tY29uZmlnIC4vcHJldHRpZXIuY29uZmlnLmNqc1wiXG4gIH0sXG4gIFwicHVibGlzaENvbmZpZ1wiOiB7XG4gICAgXCJhY2Nlc3NcIjogXCJwdWJsaWNcIlxuICB9LFxuICBcInJlcG9zaXRvcnlcIjoge1xuICAgIFwidHlwZVwiOiBcImdpdFwiLFxuICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL2FnbW1ubi90YXVyaS1jb250cm9sc1wiXG4gIH0sXG4gIFwia2V5d29yZHNcIjogW10sXG4gIFwiYXV0aG9yXCI6IFwiYWdtbW5uXCIsXG4gIFwiYnVnc1wiOiB7XG4gICAgXCJ1cmxcIjogXCJodHRwczovL2dpdGh1Yi5jb20vYWdtbW5uL3RhdXJpLWNvbnRyb2xzL2lzc3Vlc1wiXG4gIH0sXG4gIFwiaG9tZXBhZ2VcIjogXCJodHRwczovL2dpdGh1Yi5jb20vYWdtbW5uL3RhdXJpLWNvbnRyb2xzI3JlYWRtZVwiLFxuICBcImZpbGVzXCI6IFtcbiAgICBcImRpc3RcIlxuICBdLFxuICBcImV4cG9ydHNcIjoge1xuICAgIFwiLlwiOiB7XG4gICAgICBcImltcG9ydFwiOiBcIi4vZGlzdC90YXVyaS1jb250cm9scy5qc1wiLFxuICAgICAgXCJ0eXBlc1wiOiBcIi4vZGlzdC9pbmRleC5kLnRzXCJcbiAgICB9XG4gIH0sXG4gIFwibW9kdWxlXCI6IFwiLi9kaXN0L3RhdXJpLWNvbnRyb2xzLmpzXCIsXG4gIFwidHlwZXNcIjogXCIuL2Rpc3QvaW5kZXguZC50c1wiLFxuICBcImRlcGVuZGVuY2llc1wiOiB7XG4gICAgXCJAdGF1cmktYXBwcy9hcGlcIjogXCJuZXh0XCJcbiAgfSxcbiAgXCJkZXZEZXBlbmRlbmNpZXNcIjoge1xuICAgIFwiQGlhbnZzL3ByZXR0aWVyLXBsdWdpbi1zb3J0LWltcG9ydHNcIjogXCJeNC4xLjBcIixcbiAgICBcIkByb2xsdXAvcGx1Z2luLXRlcnNlclwiOiBcIl4wLjQuM1wiLFxuICAgIFwiQHRhdXJpLWFwcHMvY2xpXCI6IFwibmV4dFwiLFxuICAgIFwiYXV0b3ByZWZpeGVyXCI6IFwiXjEwLjQuMTVcIixcbiAgICBcInBvc3Rjc3NcIjogXCJeOC40LjI5XCIsXG4gICAgXCJwcmV0dGllclwiOiBcIl4zLjAuM1wiLFxuICAgIFwicHJldHRpZXItcGx1Z2luLXRhaWx3aW5kY3NzXCI6IFwiXjAuNS40XCIsXG4gICAgXCJ0YWlsd2luZGNzc1wiOiBcIl4zLjMuM1wiLFxuICAgIFwidHlwZXNjcmlwdFwiOiBcIl41LjIuMlwiLFxuICAgIFwidml0ZVwiOiBcIl40LjQuOVwiLFxuICAgIFwidml0ZS1wbHVnaW4tZHRzXCI6IFwiXjMuNS4zXCIsXG4gICAgXCJ2aXRlLXBsdWdpbi1zb2xpZFwiOiBcIl4yLjcuMFwiXG4gIH0sXG4gIFwicGVlckRlcGVuZGVuY2llc1wiOiB7XG4gICAgXCJAdGF1cmktYXBwcy9wbHVnaW4tb3NcIjogXCIyLjAuMC1hbHBoYS4yXCIsXG4gICAgXCJzb2xpZC1qc1wiOiBcIl4xLjcuOFwiLFxuICAgIFwidGFpbHdpbmQtbWVyZ2VcIjogXCJeMS4xNC4wXCJcbiAgfVxufVxuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUE2YixTQUFTLGVBQWU7QUFDcmQsT0FBTyxZQUFZO0FBQ25CLFNBQVMsb0JBQW9CO0FBQzdCLE9BQU8sU0FBUztBQUNoQixPQUFPLGlCQUFpQjs7O0FDcUR0Qix1QkFBb0I7QUFBQSxFQUNsQix5QkFBeUI7QUFBQSxFQUN6QixZQUFZO0FBQUEsRUFDWixrQkFBa0I7QUFDcEI7OztBRHJERixJQUFPLHNCQUFRLGFBQWEsQ0FBQyxPQUFPO0FBQUEsRUFDbEMsU0FBUztBQUFBLElBQ1AsSUFBSTtBQUFBLE1BQ0YsU0FBUyxDQUFDLHNCQUFzQjtBQUFBLE1BQ2hDLGFBQWE7QUFBQSxJQUNmLENBQUM7QUFBQSxJQUNELFlBQVk7QUFBQSxFQUNkO0FBQUEsRUFFQSxPQUFPO0FBQUEsSUFDTCxLQUFLO0FBQUEsTUFDSCxPQUFPLFFBQVEsT0FBTyx5QkFBeUI7QUFBQSxNQUMvQyxNQUFNO0FBQUEsTUFDTixTQUFTLENBQUMsSUFBSTtBQUFBO0FBQUEsTUFDZCxVQUFVLE1BQU07QUFBQSxJQUNsQjtBQUFBLElBQ0EsZUFBZTtBQUFBLE1BQ2IsVUFBVSxDQUFDLEdBQUcsT0FBTyxLQUFpQixnQkFBZ0IsQ0FBQztBQUFBLE1BQ3ZELFNBQVMsQ0FBQyxPQUFPLENBQUM7QUFBQSxNQUNsQixRQUFRO0FBQUEsUUFDTixTQUFTO0FBQUEsVUFDUCxPQUFPO0FBQUEsVUFDUCxhQUFhO0FBQUEsVUFDYix5QkFBeUI7QUFBQSxVQUN6QixNQUFNO0FBQUEsVUFDTixrQkFBa0I7QUFBQSxVQUNsQiw2QkFBNkI7QUFBQSxRQUMvQjtBQUFBLFFBQ0EsT0FBTztBQUFBLFFBQ1AsU0FBUyxDQUFDLE9BQU8sQ0FBQztBQUFBLE1BQ3BCO0FBQUEsSUFDRjtBQUFBLEVBQ0Y7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQUtBLGFBQWE7QUFBQTtBQUFBLEVBRWIsUUFBUTtBQUFBLElBQ04sTUFBTTtBQUFBLElBQ04sWUFBWTtBQUFBLEVBQ2Q7QUFBQTtBQUFBO0FBQUEsRUFHQSxXQUFXLENBQUMsU0FBUyxRQUFRO0FBQy9CLEVBQUU7IiwKICAibmFtZXMiOiBbXQp9Cg==
